# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    security.access.study_voter:
        class:      App\Security\Authorization\Voter\StudyVoter
        public:     false
        tags:
            - { name: security.voter }

    security.access.catalog_voter:
        class:      App\Security\Authorization\Voter\CatalogVoter
        public:     false
        tags:
            - { name: security.voter }

    security.access.dataspecification_voter:
        class:      App\Security\Authorization\Voter\DataSpecificationVoter
        public:     false
        tags:
            - { name: security.voter }

    App\Model\Slack\ApiClient:
        arguments:
            - '%env(SLACK_INFO_WEBHOOK_URL)%'

    App\Service\Distribution\MysqlBasedDistributionService:
        arguments:
            - '%env(DB_HOST)%'
            - '%env(DB_CREATOR_USER)%'
            - '%env(DB_CREATOR_PASS)%'
            - '%env(DB_PORT)%'
            - '%env(bool:USE_SSL)%'
            - '%kernel.project_dir%/certs/DigiCertGlobalRootG2.crt.pem'

    App\Service\Distribution\TripleStoreBasedDistributionService:
        arguments:
            - '%env(STARDOG_HOST)%'
            - '%env(STARDOG_PROTOCOL)%'
            - '%env(STARDOG_USER)%'
            - '%env(STARDOG_PASS)%'
            - '%env(STARDOG_PORT)%'

    App\Service\EncryptionService:
        arguments:
            - '%env(ENCRYPTION_KEY)%'

    Castor\BioPortal\Api\ApiWrapper:
        arguments:
            - { apiKey: '%env(BIOPORTAL_API_KEY)%' }

    custom_slack_handler:
        class: App\Service\Logging\SlackWebhookHandler
        arguments:
            - '%env(SLACK_DEBUG_WEBHOOK_URL)%'
            - '%kernel.project_dir%'

    App\Model\Castor\ApiClient:
        autowire: true

    knpu.oauth2.provider_factory:
        class: App\Factory\Security\ProviderFactory

    App\Model\Grid\ApiEndpoint:
        arguments:
            - '%env(GRID_API_URL)%'
