import React, {Component} from 'react';
import {toast} from "react-toastify/index";
import ToastContent from "../../ToastContent";
import axios from "axios/index";
import FormItem from "../FormItem";
import Dropdown from "../../Input/Dropdown";
import LocalizedTextInput from "../../Input/LocalizedTextInput";

export default class MetadataForm extends Component {
    constructor(props) {
        super(props);

        this.state = {
            languages: [],
            licenses: [],
        };
    }

    componentDidMount() {
        this.getLanguages();
        this.getLicenses();
    }

    getLanguages = () => {
        axios.get('/api/languages')
            .then((response) => {
                this.setState({
                    languages: response.data,
                });
            })
            .catch((error) => {
                toast.error(<ToastContent type="error" message="An error occurred" />);
            });
    };

    getLicenses = () => {
        axios.get('/api/licenses')
            .then((response) => {
                this.setState({
                    licenses: response.data,
                });
            })
            .catch(() => {
                toast.error(<ToastContent type="error" message="An error occurred" />);
            });
    };

    render() {
        const { languages, licenses } = this.state;
        const { data, validation, handleChange} = this.props;

        const required = "This field is required";

        return (
            <div>
                <FormItem label="Title">
                    <LocalizedTextInput
                        validators={['required']}
                        errorMessages={[required]}
                        name="title"
                        onChange={handleChange}
                        value={data.title}
                        serverError={validation.title}
                        languages={languages}
                    />
                </FormItem>
                <FormItem label="Description">
                    <LocalizedTextInput
                        validators={['required']}
                        errorMessages={[required]}
                        name="description"
                        onChange={handleChange}
                        value={data.description}
                        serverError={validation.description}
                        languages={languages}
                        as="textarea"
                        rows="8"
                    />
                </FormItem>

                <FormItem label="Language">
                    <Dropdown
                        validators={['required']}
                        errorMessages={[required]}
                        options={languages}
                        name="language"
                        onChange={(e) => {handleChange({target: { name: 'language', value: e.value }})}}
                        value={languages.filter(({value}) => value === data.language)}
                        serverError={validation.language}
                    />
                </FormItem>

                <FormItem label="License">
                    <Dropdown
                        options={licenses}
                        name="license"
                        onChange={(e) => {handleChange({target: { name: 'license', value: e.value }})}}
                        value={licenses.filter(({value}) => value === data.license)}
                        serverError={validation.license}
                    />
                </FormItem>
            </div>
        );
    }
}